# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fib_sequence_even_sum(num1, num2, stop_at, sum = 0) -> list:
    # print(f"{num1} {num2} {stop_at} {sum}")
    new_num = num1 + num2
    if sum == 0:
        if num1 % 2 == 0:
            sum += num1
        if num2 % 2 == 0:
            sum += num2
    if new_num <= stop_at:
        if (new_num % 2 == 0):
            sum += new_num
        return fib_sequence_even_sum(num2, new_num, stop_at, sum)
    return sum

assert 2 == fib_sequence_even_sum(1, 2, 2)
assert 10 == fib_sequence_even_sum(1, 2, 8)

print(fib_sequence_even_sum(1,2,4000000))